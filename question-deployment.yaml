# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: default
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        env:
        - name: POSTGRES_DB
          value: postgres
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: password
        ports:
        - containerPort: 5432

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: default
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres
  clusterIP: None # Headless service for internal DNS discovery

---
# question-Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: question-service
  name: question-service
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: question-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: question-service
    spec:
      containers:
      - name: question-service
        image: preetibarshadash/question-service:0.0.2-SNAPSHOT
        imagePullPolicy: IfNotPresent
        env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://postgres-service:5432/postgres
        - name: SPRING_DATASOURCE_USERNAME
          value: postgres
        - name: SPRING_DATASOURCE_PASSWORD
          value: password
        ports:
        - containerPort: 8082

---
# question-Service Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: question-service
  name: question-service
  namespace: default
spec:
  ports:
  - port: 8082
    targetPort: 8082
    protocol: TCP
  selector:
    app: question-service
  type: LoadBalancer
